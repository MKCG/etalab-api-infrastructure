server {
  listen 443 ;
  server_name {{ server_name }};
  ssl on;
  ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
  add_header Strict-Transport-Security "max-age=15552000" always;
  add_header X-Frame-Options "DENY";
  add_header X-Robots-Tag "noindex,nofollow";

  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";

  location / {
    proxy_pass http://localhost:{{ app_port }};
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    client_max_body_size 10m;
  }
{% if permanent_redirect_rules is defined %}
{% for redirect_rule in permanent_redirect_rules %}

  location {{ redirect_rule.source_pattern }} {
    return 301 $scheme://$host{{ redirect_rule.destination_path }}$is_args$args;
  }
{% endfor %}
{% endif %}
}
