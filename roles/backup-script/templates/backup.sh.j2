#!/bin/sh

set -e

logPrefix(){
  echo "$(date --iso-8601=seconds) - {{ openstack_container_name }} -"
}
STORE_IDENTIFIER={{ store_identifier | basename }}

echo "$(logPrefix) Backing up $STORE_IDENTIFIER..."

echo "$(logPrefix) Creating encrypted dump of $STORE_IDENTIFIER..."
TIMESTAMP=$(date +'%Y%m%d%H%M%S')
BACKUP_FILE_NAME={{ backup_params[backup_type].backup_file_prefix }}${STORE_IDENTIFIER}_${TIMESTAMP}.{{ backup_params[backup_type].backup_file_extension }}.pgp
TEMP_PATH=/tmp/${BACKUP_FILE_NAME}

{{ backup_params[backup_type].command }} {{ store_identifier }} | gpg2 --recipient {{ gpg_recipient }} --encrypt --always-trust --output ${TEMP_PATH}

echo "$(logPrefix) Uploading backup file to remote server..."
export OS_AUTH_URL="{{ openstack_auth_url }}"
export OS_IDENTITY_API_VERSION="{{ openstack_identity_api_version }}"
export OS_TENANT_ID="{{ openstack_tenant_id }}"
export OS_TENANT_NAME="{{ openstack_tenant_name }}"
export OS_USERNAME="{{ openstack_username }}"
export OS_PASSWORD="{{ openstack_password }}"
export OS_REGION_NAME="{{ openstack_region_name }}"

/usr/local/bin/swift upload {{ openstack_container_name }} ${TEMP_PATH} --object-name ${BACKUP_FILE_NAME}

echo "$(logPrefix) Erasing local copy of backup file..."
shred -u -z ${TEMP_PATH}

echo "$(logPrefix) $STORE_IDENTIFIER successfully backed up!"
