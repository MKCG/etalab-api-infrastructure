#!/bin/sh

set -e
set -x

{
logPrefix(){
  echo "$(date --iso-8601=seconds) - $APP_NAME -"
}

APP_NAME="{{ deployed_app_name }}"
APP_VERSION={{ deployment_branch }}
echo "$(logPrefix) Deploying $APP_NAME..."

echo "$(logPrefix) Preparing installation..."
ROOT_PATH="{{ root_path }}"
APP_PATH=${ROOT_PATH}/${APP_NAME}
TIMESTAMP=$(date +'%Y%m%d%H%M%S')
RELEASES_PATH=${APP_PATH}/releases/${TIMESTAMP}
mkdir -p ${APP_PATH}/releases

echo "$(logPrefix) Fetching archive..."
cd ${APP_PATH}
curl -f -L https://github.com/betagouv/${APP_NAME}/archive/${APP_VERSION}.tar.gz --output ${APP_NAME}-${APP_VERSION}.tar.gz

echo "$(logPrefix) Unpacking..."
tar -xzf ${APP_NAME}-${APP_VERSION}.tar.gz
mv ${APP_NAME}-${APP_VERSION}/ ${RELEASES_PATH}
rm ${APP_NAME}-${APP_VERSION}.tar.gz

echo "$(logPrefix) Installing..."
cd ${RELEASES_PATH}
export $(cat /etc/${APP_NAME}.conf | xargs)


{{ deployment_installation_commands }}


echo "$(logPrefix) Linking new deployment..."
if [ -h ${APP_PATH}/current ]; then
    rm ${APP_PATH}/current
fi
ln -s ${RELEASES_PATH} ${APP_PATH}/current

echo "$(logPrefix) Restarting service..."
sudo /bin/systemctl restart ${APP_NAME}

echo "$(logPrefix) Removing old releases..."
cd ${APP_PATH}/releases
ls . | sort -r | tail -n +6 | xargs rm -rf

echo "$(logPrefix) Deployment of $APP_NAME successfully completed!"

exit 0
} >> /opt/apps/apps-deployment.log
